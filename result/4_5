(4,5)
test/assignment3/archi_assign3.asm
test/assignment3/MatrixMultiplication.s
Match - 91.7241%

The matched blocks are :
1st program : 
Line 4:	mov r1,0x100
Line 5:	mov r2,0x200
Line 6:	mov r3,0x300
Line 7:	mov r4,-1       	/*r4 is i*/
Line 8:	mov r5,0		/*r5 is j*/

2nd program : 
Line 2:mov r0,3   // size of matrix
Line 3:mov r1,0x100   // base address of A matrix 
Line 4:mov r2,0x200   // base address of B matrix
Line 5:mov r3,0x300   // base address of C matrix


The matched blocks are :
1st program : 
Line 10:	add r4,r4,1	
Line 11:	cmp r4,r0
Line 12:	beq .continue

2nd program : 
Line 13:add r4,r4,1
Line 14:cmp r4,r0
Line 15:beq .multiply       // Call the statement to multiply A and B


The matched blocks are :
1st program : 
Line 10:	add r4,r4,1	
Line 11:	cmp r4,r0
Line 12:	beq .continue

2nd program : 
Line 19:add r5,r5,1
Line 20:cmp r5,r0
Line 21:beq .increment    // call for outer loop


The matched blocks are :
1st program : 
Line 10:	add r4,r4,1	
Line 11:	cmp r4,r0
Line 12:	beq .continue

2nd program : 
Line 44:add r4,r4,1
Line 45:cmp r4,r0
Line 46:beq .display    // breaking condition of outer loop


The matched blocks are :
1st program : 
Line 10:	add r4,r4,1	
Line 11:	cmp r4,r0
Line 12:	beq .continue

2nd program : 
Line 50:add r5,r5,1
Line 52:cmp r5,r0
Line 53:beq .loop1    // call for outer loop


The matched blocks are :
1st program : 
Line 10:	add r4,r4,1	
Line 11:	cmp r4,r0
Line 12:	beq .continue

2nd program : 
Line 65:add r6 ,r6,1
Line 66:cmp r6,r0
Line 67:beq .loop2     // breaking condition for common loop


The matched blocks are :
1st program : 
Line 10:	add r4,r4,1	
Line 11:	cmp r4,r0
Line 12:	beq .continue

2nd program : 
Line 97:add r4,r4,1
Line 98:cmp r4,r0
Line 99:beq .EXIT    // breaking Condition


The matched blocks are :
1st program : 
Line 10:	add r4,r4,1	
Line 11:	cmp r4,r0
Line 12:	beq .continue

2nd program : 
Line 103:add r5,r5,1
Line 104:cmp r5,r0
Line 105:beq .loopOuter


The matched blocks are :
1st program : 
Line 33:	mov r4,-1
Line 34:	mov r5,0
Line 35:	mov r6,0				/* r6 is k */

2nd program : 
Line 2:mov r0,3   // size of matrix
Line 3:mov r1,0x100   // base address of A matrix 
Line 4:mov r2,0x200   // base address of B matrix
Line 5:mov r3,0x300   // base address of C matrix


The matched blocks are :
1st program : 
Line 37:	add r4,r4,1			/* r4 is i*/
Line 38:	cmp r4,r0				/*if i<n then continue*/
Line 39:	beq .return

2nd program : 
Line 13:add r4,r4,1
Line 14:cmp r4,r0
Line 15:beq .multiply       // Call the statement to multiply A and B


The matched blocks are :
1st program : 
Line 37:	add r4,r4,1			/* r4 is i*/
Line 38:	cmp r4,r0				/*if i<n then continue*/
Line 39:	beq .return

2nd program : 
Line 19:add r5,r5,1
Line 20:cmp r5,r0
Line 21:beq .increment    // call for outer loop


The matched blocks are :
1st program : 
Line 37:	add r4,r4,1			/* r4 is i*/
Line 38:	cmp r4,r0				/*if i<n then continue*/
Line 39:	beq .return

2nd program : 
Line 44:add r4,r4,1
Line 45:cmp r4,r0
Line 46:beq .display    // breaking condition of outer loop


The matched blocks are :
1st program : 
Line 37:	add r4,r4,1			/* r4 is i*/
Line 38:	cmp r4,r0				/*if i<n then continue*/
Line 39:	beq .return

2nd program : 
Line 50:add r5,r5,1
Line 52:cmp r5,r0
Line 53:beq .loop1    // call for outer loop


The matched blocks are :
1st program : 
Line 37:	add r4,r4,1			/* r4 is i*/
Line 38:	cmp r4,r0				/*if i<n then continue*/
Line 39:	beq .return

2nd program : 
Line 65:add r6 ,r6,1
Line 66:cmp r6,r0
Line 67:beq .loop2     // breaking condition for common loop


The matched blocks are :
1st program : 
Line 37:	add r4,r4,1			/* r4 is i*/
Line 38:	cmp r4,r0				/*if i<n then continue*/
Line 39:	beq .return

2nd program : 
Line 97:add r4,r4,1
Line 98:cmp r4,r0
Line 99:beq .EXIT    // breaking Condition


The matched blocks are :
1st program : 
Line 37:	add r4,r4,1			/* r4 is i*/
Line 38:	cmp r4,r0				/*if i<n then continue*/
Line 39:	beq .return

2nd program : 
Line 103:add r5,r5,1
Line 104:cmp r5,r0
Line 105:beq .loopOuter


The matched blocks are :
1st program : 
Line 43:		add r5,r5,1		/*r5 if j*/
Line 44:		cmp r5,r0			/*if j<n then continue*/
Line 45:		beq .loopc1

2nd program : 
Line 13:add r4,r4,1
Line 14:cmp r4,r0
Line 15:beq .multiply       // Call the statement to multiply A and B


The matched blocks are :
1st program : 
Line 43:		add r5,r5,1		/*r5 if j*/
Line 44:		cmp r5,r0			/*if j<n then continue*/
Line 45:		beq .loopc1

2nd program : 
Line 19:add r5,r5,1
Line 20:cmp r5,r0
Line 21:beq .increment    // call for outer loop


The matched blocks are :
1st program : 
Line 43:		add r5,r5,1		/*r5 if j*/
Line 44:		cmp r5,r0			/*if j<n then continue*/
Line 45:		beq .loopc1

2nd program : 
Line 44:add r4,r4,1
Line 45:cmp r4,r0
Line 46:beq .display    // breaking condition of outer loop


The matched blocks are :
1st program : 
Line 43:		add r5,r5,1		/*r5 if j*/
Line 44:		cmp r5,r0			/*if j<n then continue*/
Line 45:		beq .loopc1

2nd program : 
Line 50:add r5,r5,1
Line 52:cmp r5,r0
Line 53:beq .loop1    // call for outer loop


The matched blocks are :
1st program : 
Line 43:		add r5,r5,1		/*r5 if j*/
Line 44:		cmp r5,r0			/*if j<n then continue*/
Line 45:		beq .loopc1

2nd program : 
Line 65:add r6 ,r6,1
Line 66:cmp r6,r0
Line 67:beq .loop2     // breaking condition for common loop


The matched blocks are :
1st program : 
Line 43:		add r5,r5,1		/*r5 if j*/
Line 44:		cmp r5,r0			/*if j<n then continue*/
Line 45:		beq .loopc1

2nd program : 
Line 97:add r4,r4,1
Line 98:cmp r4,r0
Line 99:beq .EXIT    // breaking Condition


The matched blocks are :
1st program : 
Line 43:		add r5,r5,1		/*r5 if j*/
Line 44:		cmp r5,r0			/*if j<n then continue*/
Line 45:		beq .loopc1

2nd program : 
Line 103:add r5,r5,1
Line 104:cmp r5,r0
Line 105:beq .loopOuter


