(5,14)
test/assignment3/MatrixMultiplication.s
test/assignment3/matrix.txt.txt
Match - 16.6667%

The matched blocks are :
1st program : 
Line 2:mov r0,3   // size of matrix
Line 3:mov r1,0x100   // base address of A matrix 
Line 4:mov r2,0x200   // base address of B matrix
Line 5:mov r3,0x300   // base address of C matrix

2nd program : 
Line 2:	mov r8,0x100     //base index of matrix A
Line 3:	mov r2,0  //index i
Line 4:	mov r3,0  //index j
Line 5:	mov r5,3	//size of matrix
Line 6:	sub r12,r5,1 //size of matrix -1


The matched blocks are :
1st program : 
Line 2:mov r0,3   // size of matrix
Line 3:mov r1,0x100   // base address of A matrix 
Line 4:mov r2,0x200   // base address of B matrix
Line 5:mov r3,0x300   // base address of C matrix

2nd program : 
Line 29:	mov r9,0x200        //base index of matrix B
Line 30:	mov r2,0           //index i
Line 31:	mov r3,0           //index j


The matched blocks are :
1st program : 
Line 2:mov r0,3   // size of matrix
Line 3:mov r1,0x100   // base address of A matrix 
Line 4:mov r2,0x200   // base address of B matrix
Line 5:mov r3,0x300   // base address of C matrix

2nd program : 
Line 55:	mov r10,0x300            //base index of matrix C
Line 56:	mov r2,0                 //i=0           
Line 57:	mov r3,0                 //j=0
Line 58:	mov r4,0                 // k=0
Line 59:	mov r13,0


The matched blocks are :
1st program : 
Line 69:mul r9,r4,r0
Line 70:add r9,r9,r6
Line 71:mul r9,r9,4     //[i][k]  address
Line 72:add r9,r9,r1  
Line 74:ld r10,[r9]      //  retrieving A[i][k] address value
Line 76:mul r11,r6,r0
Line 77:add r11,r11,r5
Line 78:mul r11,r11,4
Line 79:add r11,r11,r2
Line 81:ld r12,[r11]      //b[k][j]
Line 83:mul r10,r10,r12   //a[i][k]*b[k][j]
Line 85:add r13,r13,r10
Line 86:st r13,[r8]     // storing the value i.e C[i][j] in memory
Line 88:b .loop3

2nd program : 
Line 72:			mul r6,r2,r5        // i*size of matrix
Line 73:			add r6,r6,r4        // (i*N+k)   ,N is size of matrix
Line 74:			mul r6,r6,4         //(i*N+k)*4
Line 75:			add r6,r6,r8        //
Line 76:			ld r0,0[r6]         //r0=A[i][k]
Line 77:			mul r7,r4,r5        
Line 78:			add r7,r7,r3
Line 79:			mul r7,r7,4         //(k*n+j)*4
Line 80:			add r7,r7,r9
Line 81:			ld r1,0[r7]          //r1=B[k][j]
Line 82:			mul r6,r1,r0        //product
Line 83:			add r13,r13,r6
Line 84:			add r4,r4,1
Line 85:			b .loop7


