    .main:
     mov r1 0x100
     mov r0 2
     mov r2 0
     mov r3 0
     mov r4 0
 .loop:
     mov r1 0x100
     add r5 r2 r3
     mul r6 r4 4
     add r1 r1 r6
      st r5 [r1]
     add r4 r4 1
     add r3 r3 1
     cmp r0 r3
     bgt .loop
     add r2 r2 1
     mov r3 0
     cmp r0 r2
     beq .exit
     b .loop

.exit:
   mov r1 0x200
  // mov r0 3
   mov r2 0
   mov r3 0
   mov r4 0
.loop1:
      mov r1 0x200
      mul r7 r3 3
      mul r8 r2 2
      add r5 r8 r7
      mul r6 r4 4
      add r1 r1 r6
      st r5 [r1]
      add r4 r4 1
     add r3 r3 1
     cmp r0 r3
     bgt .loop1
     add r2 r2 1
     mov r3 0
     cmp r0 r2
     beq .exit1
     b .loop1
.exit1:
mov r1 0x100
mov r2 0x200
mov r3 0x300
 // mov r0 3
  mov r4 0
  mov r5 0
  mov r9 0
  mul r13 r0 4
  mul r12 r0 r0
  mul r12 r12 4
  add r12 r1 r12
 mov r10 0

.loo1:
  cmp r4 r0
  beq .loo2
  mul r6 r4 4
  add r6 r1 r6
  ld r6 [r6]
  mul r7 r4 r0
  mul r7 r7 4
  add r7 r7 r9
  add r7 r2 r7 
  ld r7 [r7]
  mul r6 r6 r7  
  add r10 r10 r6
  add r4 r4 1
  b .loo1

.loo2:
  st r10 [r3]
  .print r10
  add r3 r3 4
  add r5 r5 1
  mul r9 r5 4
  mov r4 0
  cmp r5 r0
  beq .loo3
  mov r10 0
  b .loo1

.loo3:
  mov r5 0
 mov r9 0
  mov r10 0
  add r1 r1 r13
  cmp r1 r12 
  beq .end
  b .loo1

.end:
  
  

























       